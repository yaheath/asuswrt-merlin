#
# Broadcom Linux Router WL firmware Makefile
#
# Copyright (C) 2015, Broadcom Corporation. All Rights Reserved.
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# $Id$
#


PCIEFD_EMBED_HEADER_TEMPLATE	:= $(SRCBASE_DHD)/shared/rtecdc_router.h.in
PCIEFD_EMBED_HEADER		:= $(SRCBASE_DHD)/shared/rtecdc_router.h

# All firmware targets must be defined here
#PCIEFD_TARGETS_LIST		:= 43602a1
PCIEFD_TARGETS_LIST		+= 4366b1

obj-pciefd			:= $(patsubst %,%-obj,$(PCIEFD_TARGETS_LIST))
clean-pciefd			:= $(patsubst %,%-clean,$(PCIEFD_TARGETS_LIST))
version-pciefd			:= $(patsubst %,%-version,$(PCIEFD_TARGETS_LIST))

WLCX				:= ""
ifeq ($(CONFIG_GMAC3),y)
ifeq ($(CONFIG_FLATLAS),y)
	WLCX			:= "-wlcx"
endif
endif

# 43602a1-roml target
FW_43602a1_SRCBASE		:= $(abspath $(SRCBASE)/../43602/src)
FW_43602a1_CHIPID		:= 43602a1
FW_43602a1_BUILD_PREFIX		:= $(FW_43602a1_CHIPID)-roml
FW_43602a1_MAKE_PATH		:= $(FW_43602a1_SRCBASE)/dongle/rte/wl
FW_43602a1_BUILD_PATH		:= $(FW_43602a1_MAKE_PATH)/builds/$(FW_43602a1_BUILD_PREFIX)
FW_43602a1_OS_PATH		:= $(FW_43602a1_SRCBASE)/hndrte
ifeq ($(WLTEST),1)
    FW_43602a1_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-11nprop-ringer-dmaindex16
else
        FW_43602a1_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wnm-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-ringer-dmaindex16
endif


# 4366b1-roml target
FW_4366b1_SRCBASE		:= $(abspath $(SRCBASE)/../4365/src)
FW_4366b1_CHIPID		:= 4366b1
FW_4366b1_BUILD_PREFIX		:= $(FW_4366b1_CHIPID)-roml
FW_4366b1_MAKE_PATH		:= $(FW_4366b1_SRCBASE)/dongle/make/wl
FW_4366b1_BUILD_PATH		:= $(FW_4366b1_SRCBASE)/../build/dongle/$(FW_4366b1_BUILD_PREFIX)
FW_4366b1_OS_PATH		:= $(FW_4366b1_SRCBASE)/../components/threadx
ifeq ($(WLTEST),1)
    FW_4366b1_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-11nprop-dbgam-dbgams-ringer-dmaindex16-bgdfs$(WLCX)
else
        FW_4366b1_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wnm-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-dbwsw-ringer-dmaindex16-bgdfs$(WLCX)
endif


# All rules start here
$(obj-pciefd):
	@echo "TARGETS : $(PCIEFD_TARGETS_LIST)"
	$(eval R_CHIP := $(patsubst %-obj,%,$@))
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
	if [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
		if [ -d $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt ]; then \
			cp -rpf $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET); \
		fi && \
		$(MAKE) CROSS_COMPILE=arm-none-eabi -C $(FW_$(R_CHIP)_MAKE_PATH) $(FW_$(R_CHIP)_BUILD_PREFIX)/$(FW_$(R_CHIP)_TARGET) && \
		if [ -f $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc_$(FW_$(R_CHIP)_CHIPID).h ]; then \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc_$(FW_$(R_CHIP)_CHIPID).h $(SRCBASE_DHD)/shared/ && \
			echo "#include <rtecdc_$(FW_$(R_CHIP)_CHIPID).h>" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID) && \
			echo "#define DLIMAGE_$(FW_$(R_CHIP)_CHIPID)" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID); \
		fi && \
		if [ -f $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data.c ]; then \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data.c $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src/wlc_clm_data.c.GEN; \
		fi && \
		if [ -f $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_inc.c ]; then \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_inc.c $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src/wlc_clm_data_inc.c.GEN; \
		fi && \
		if [ ! -d $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt ]; then \
			cd $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET) && \
			find . -name "tx_*.*" | cpio -pdm $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt && \
			find . -name "txe_*.*" | cpio -pdm $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt && \
			cd -; \
		fi \
	else \
		if [ -f $(SRCBASE_DHD)/shared/rtecdc_$(FW_$(R_CHIP)_CHIPID).h ]; then \
			echo "#include <rtecdc_$(FW_$(R_CHIP)_CHIPID).h>" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID) && \
			echo "#define DLIMAGE_$(FW_$(R_CHIP)_CHIPID)" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID); \
		fi \
	fi \
	fi

$(clean-pciefd):
	$(eval R_CHIP := $(patsubst %-clean,%,$@))
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
		if [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
			$(MAKE) CROSS_COMPILE=arm-none-eabi -C $(FW_$(R_CHIP)_MAKE_PATH) $(FW_$(R_CHIP)_BUILD_PREFIX)/$(FW_$(R_CHIP)_TARGET)/clean && \
			$(RM) -f $(SRCBASE_DHD)/shared/rtecdc_$(FW_$(R_CHIP)_CHIPID).h; \
		fi \
	fi

$(version-pciefd):
	$(eval R_CHIP := $(patsubst %-version,%,$@))
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
		if [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
			$(MAKE) -C $(FW_$(R_CHIP)_SRCBASE)/include; \
		fi \
	fi

pciefd-cleangen:
	@if [ -d $(FW_$(lastword $(PCIEFD_TARGETS_LIST))_SRCBASE)/wl/sys ]; then \
		$(RM) -f  $(PCIEFD_EMBED_HEADER) $(PCIEFD_EMBED_HEADER).tmp.* && \
		cp $(PCIEFD_EMBED_HEADER_TEMPLATE) $(PCIEFD_EMBED_HEADER); \
	fi

pciefd: pciefd-cleangen $(obj-pciefd)
	@for i in $(wildcard $(PCIEFD_EMBED_HEADER).tmp.*) ; do \
		cat $${i} >> $(PCIEFD_EMBED_HEADER); \
		$(RM) -f $${i}; \
        done

pciefd-clean: pciefd-cleangen $(clean-pciefd)

pciefd-install:
	# Nothing to be done here
	@true

pciefd-version: $(version-pciefd)

.PHONY: pciefd pciefd-clean pciefd-install pciefd-version pciefd-cleangen
